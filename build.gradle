buildscript {
    ext {
        springBootVersion = '1.3.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE")
        classpath 'org.springframework:springloaded:1.2.0.RELEASE'
    }
}

plugins {
    id "com.jfrog.artifactory" version "3.1.1"
}

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven-publish'

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}

group = 'com.vonage'
version = '0.0.1-SNAPSHOT'
jar {
    baseName = 'event-notify'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/libs-milestone" }
}

configurations {
    compile.exclude module: "spring-boot-starter-tomcat"
    all*.exclude module: "log4j-over-slf4j"
    all*.exclude module: "slf4j-log4j12"
    //all*.exclude module: "spring-boot-starter-logging"
}

dependencies {
    compile "org.springframework.cloud:spring-cloud-starter-hystrix"
    compile "org.springframework.boot:spring-boot-starter-data-mongodb"
    // compile "org.springframework.boot:spring-boot-starter-security"
    compile 'org.springframework.boot:spring-boot-starter'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.cloud:spring-cloud-starter-hystrix-dashboard'
    compile "org.springframework.boot:spring-boot-starter-jetty:1.2.5.RELEASE"
    compile "org.codehaus.groovy:groovy:2.4.4"
    compile "org.codehaus.groovy:groovy-all:2.4.4"
    compile "org.apache.kafka:kafka_2.10:0.8.2.1"
    compile "org.springframework.integration:spring-integration-kafka:1.1.1.RELEASE"
    compile "org.springframework.integration:spring-integration-java-dsl:1.1.0.M2"
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'com.netflix.feign:feign-gson:8.10.0'
    compile 'com.netflix.feign:feign-slf4j:8.10.0'

    //compile 'org.slf4j:slf4j-api:1.7.12'
    //compile 'ch.qos.logback:logback-classic:1.1.3'
    testCompile "cglib:cglib-nodep:3.1"
    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile 'org.springframework:spring-test:4.1.7.RELEASE'
    testCompile "org.spockframework:spock-core:1.0-groovy-2.4"
    testCompile 'org.spockframework:spock-spring:1.0-groovy-2.4'
}

sourceSets {
    // Note that just declaring this sourceset creates two configurations.
    test_integration {
        groovy {
            compileClasspath += main.output
            runtimeClasspath += main.output
        }
    }
}

configurations {
    test_integrationCompile.extendsFrom testCompile
    test_integrationRuntime.extendsFrom testRuntime
}

task testIntegration(type:Test) {
    description = "Run integration tests (located in src/test_integration/...)."
    testClassesDir = sourceSets.test_integration.output.classesDir
    classpath = sourceSets.test_integration.runtimeClasspath
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-starter-parent:Angel.SR3"
    }
}


eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.6'
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

task prepareDocker(type: Copy, dependsOn: jar) {
    println 'copy jar'
    from 'build/libs/'
    into 'build/docker/'
    include '*.jar'
    rename ('.*.jar', 'event-notify.jar')
    from 'src/docker/'
    into 'build/docker/'
    include 'Dockerfile'
}

artifactory {
    contextUrl = 'http://neovpartifactory1.neo.vocalocity.com:8081/artifactory'
    publish {
        repository {
            repoKey = 'vbs-maven-snapshot'
        }
        defaults {
            publications ('mavenJava')
        }
    }
}